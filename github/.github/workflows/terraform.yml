name: terraform

on:
  push:
    branches:
      - master
  pull_request:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
  GITHUB_ORGANIZATION: ${{ secrets.CUSTOM_GITHUB_ORGANIZATION }}
  TF_VAR_packagist_token: ${{ secrets.PACKAGIST_TOKEN }}

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.12.31

    - name: terraform format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: terraform init
      id: init
      run: terraform init

    - name: terraform workspace
      id: workspace
      run: terraform workspace select prd

    - name: terraform validate
      id: validate
      run: terraform validate -no-color

    - name: terraform plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: terraform apply
      id: apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå \`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\ \`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ \`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
